name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - develop

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: headless-plugins

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        run: |
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=stable
          docker buildx bake --load ${VERSION}

      - name: Log into registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USER }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/digitalcube/shifter-headless-plugins/$IMAGE_NAME
          DH_IMAGE_ID=getshifter/headless-plugins

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `stable` tag convention
          [ "$VERSION" == "main" ] && VERSION=stable

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $VERSION $IMAGE_ID:$VERSION
          docker tag $VERSION $DH_IMAGE_ID:$VERSION

          docker tag $VERSION-amd64 $IMAGE_ID:$VERSION-amd64
          docker tag $VERSION-amd64 $DH_IMAGE_ID:$VERSION-amd64

          docker tag $VERSION-arm64 $IMAGE_ID:$VERSION-arm64
          docker tag $VERSION-arm64 $DH_IMAGE_ID:$VERSION-arm64

          docker tag $VERSION-lite $IMAGE_ID:$VERSION-lite
          docker tag $VERSION-lite $DH_IMAGE_ID:$VERSION-lite

          docker tag $VERSION-lite-amd64 $IMAGE_ID:$VERSION-lite-amd64
          docker tag $VERSION-lite-amd64 $DH_IMAGE_ID:$VERSION-lite-amd64

          docker tag $VERSION-lite-arm64 $IMAGE_ID:$VERSION-lite-arm64
          docker tag $VERSION-lite-arm64 $DH_IMAGE_ID:$VERSION-lite-arm64

          docker push $IMAGE_ID:$VERSION-lite
          docker push $IMAGE_ID:$VERSION-lite-amd64
          docker push $IMAGE_ID:$VERSION-lite-arm64
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION-amd64
          docker push $IMAGE_ID:$VERSION-arm64

          docker push $DH_IMAGE_ID:$VERSION-lite
          docker push $DH_IMAGE_ID:$VERSION-lite-amd64
          docker push $DH_IMAGE_ID:$VERSION-lite-arm64
          docker push $DH_IMAGE_ID:$VERSION
          docker push $DH_IMAGE_ID:$VERSION-amd64
          docker push $DH_IMAGE_ID:$VERSION-arm64

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_USERNAME: GA_headless-plugins
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      # - name: Create Pull Request
      #   if: endsWith(github.ref, '/develop')
      #   uses: peter-evans/create-pull-request@v2
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
